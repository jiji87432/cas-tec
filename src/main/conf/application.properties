##
# CAS Server Context Configuration
#
server.context-path=/cas-tec
server.port=8443

cas.server.name=${pay.cas.tec.server}
cas.server.prefix=${pay.cas.tec.server}/cas-tec
# cas.host.name=

#STEP 5\u6DFB\u52A0\u8BA4\u8BC1\u670D\u52A1
cas.serviceRegistry.initFromJson=true

#server.ssl.key-store=file:/etc/cas/thekeystore
#server.ssl.key-store-password=changeit
#server.ssl.key-password=changeit
# server.ssl.ciphers=
# server.ssl.client-auth=
# server.ssl.enabled=
# server.ssl.key-alias=
# server.ssl.key-store-provider=
# server.ssl.key-store-type=
# server.ssl.protocol=
# server.ssl.trust-store=
# server.ssl.trust-store-password=
# server.ssl.trust-store-provider=
# server.ssl.trust-store-type=

#server.compression.enabled=true
#server.compression.mime-types=application/javascript,application/json,application/xml,text/html,text/xml,text/plain

#server.max-http-header-size=2097152
#server.use-forward-headers=true
#server.connection-timeout=20000
#server.error.include-stacktrace=NEVER

#server.tomcat.max-http-post-size=2097152
#server.tomcat.basedir=build/tomcat
#server.tomcat.accesslog.enabled=true
#server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)
#server.tomcat.accesslog.suffix=.log
#server.tomcat.max-threads=10
#server.tomcat.port-header=X-Forwarded-Port
#server.tomcat.protocol-header=X-Forwarded-Proto
#server.tomcat.protocol-header-https-value=https
#server.tomcat.remote-ip-header=X-FORWARDED-FOR
#server.tomcat.uri-encoding=UTF-8

spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true


cas.tgc.secure=false

##
# CAS Cloud Bus Configuration
#
spring.cloud.bus.enabled=false
# spring.cloud.bus.refresh.enabled=true
# spring.cloud.bus.env.enabled=true
# spring.cloud.bus.destination=CasCloudBus
# spring.cloud.bus.ack.enabled=true

endpoints.enabled=false
endpoints.sensitive=true

endpoints.restart.enabled=false
endpoints.shutdown.enabled=false

management.security.enabled=true
management.security.roles=ACTUATOR,ADMIN
management.security.sessions=if_required
management.context-path=/status
management.add-application-context-header=false

security.basic.authorize-mode=role
security.basic.enabled=false
security.basic.path=/cas-tec/status/**

##
# CAS Web Application Session Configuration
#
server.session.timeout=300
server.session.cookie.http-only=true
server.session.tracking-modes=COOKIE

##
# CAS Thymeleaf View Configuration
#
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=true
spring.thymeleaf.mode=HTML
##
# CAS Log4j Configuration
#
# logging.config=file:/etc/cas/log4j2.xml
server.context-parameters.isLog4jAutoInitializationDisabled=true

##
# CAS AspectJ Configuration
#
spring.aop.auto=true
spring.aop.proxy-target-class=true

##
# CAS Authentication Credentials
#
#cas.authn.accept.users=casuser::Mellon


passwordEncoder.type=DEFAULT
passwordEncoder.secret=1234567890
passwordEncoder.encodingAlgorithm=MD5
passwordEncoder.characterEncoding=UTF-8

cas.authn.jdbc.query[0].sql=select * from uum_user where username=?
cas.authn.jdbc.query[0].isolationLevelName=ISOLATION_READ_COMMITTED
cas.authn.jdbc.query[0].dialect=org.hibernate.dialect.MySQLDialect
cas.authn.jdbc.query[0].propagationBehaviorName=PROPAGATION_REQUIRED
cas.authn.jdbc.query[0].batchSize=1
cas.authn.jdbc.query[0].maxAgeDays=180
cas.authn.jdbc.query[0].fieldPassword=password
cas.authn.jdbc.query[0].principalAttributeList=email
cas.authn.jdbc.query[0].passwordEncoder.type=${passwordEncoder.type}
cas.authn.jdbc.query[0].passwordEncoder.secret=${passwordEncoder.secret}
cas.authn.jdbc.query[0].passwordEncoder.encodingAlgorithm=${passwordEncoder.encodingAlgorithm}
cas.authn.jdbc.query[0].passwordEncoder.characterEncoding=${passwordEncoder.characterEncoding}





cas.authn.attributeRepository.jdbc[0].attributes.role=role
cas.authn.attributeRepository.jdbc[0].singleRow=false
cas.authn.attributeRepository.jdbc[0].order=0
cas.authn.attributeRepository.jdbc[0].requireAllAttributes=true
cas.authn.attributeRepository.jdbc[0].caseCanonicalization=NONE
cas.authn.attributeRepository.jdbc[0].queryType=AND


cas.authn.attributeRepository.jdbc[0].columnMappings.role=name

cas.authn.attributeRepository.jdbc[0].sql=SELECT 'role' as role,name FROM uum_role WHERE id in (SELECT role_id from uum_user_role where user_id in (SELECT id from uum_user where {0}));
cas.authn.attributeRepository.jdbc[0].username=username
cas.authn.attributeRepository.jdbc[0].failFastTimeout=1
cas.authn.attributeRepository.jdbc[0].isolationLevelName=ISOLATION_READ_COMMITTED
cas.authn.attributeRepository.jdbc[0].leakThreshold=10
cas.authn.attributeRepository.jdbc[0].propagationBehaviorName=PROPAGATION_REQUIRED
cas.authn.attributeRepository.jdbc[0].batchSize=1


cas.authn.attributeRepository.jdbc[1].attributes.app=app
cas.authn.attributeRepository.jdbc[1].singleRow=false
cas.authn.attributeRepository.jdbc[1].order=1
cas.authn.attributeRepository.jdbc[1].requireAllAttributes=true
cas.authn.attributeRepository.jdbc[1].caseCanonicalization=NONE
cas.authn.attributeRepository.jdbc[1].queryType=AND


cas.authn.attributeRepository.jdbc[1].columnMappings.app=app_name
cas.authn.attributeRepository.jdbc[1].sql=SELECT 'app' as app,app_name FROM uum_app WHERE id in (SELECT app_id from uum_user_app where user_id in (SELECT id from uum_user where {0}));

cas.authn.attributeRepository.jdbc[1].username=username
cas.authn.attributeRepository.jdbc[1].failFastTimeout=1
cas.authn.attributeRepository.jdbc[1].isolationLevelName=ISOLATION_READ_COMMITTED
cas.authn.attributeRepository.jdbc[1].propagationBehaviorName=PROPAGATION_REQUIRED
cas.authn.attributeRepository.jdbc[1].batchSize=1


cas.authn.attributeRepository.jdbc[2].attributes.role=role
cas.authn.attributeRepository.jdbc[2].singleRow=false
cas.authn.attributeRepository.jdbc[2].order=2
cas.authn.attributeRepository.jdbc[2].requireAllAttributes=true
cas.authn.attributeRepository.jdbc[2].caseCanonicalization=NONE
cas.authn.attributeRepository.jdbc[2].queryType=AND


cas.authn.attributeRepository.jdbc[2].columnMappings.role=role_name
cas.authn.attributeRepository.jdbc[2].sql=SELECT 'role' as role,name as role_name FROM uum_role WHERE id in (SELECT role_id from uum_user_role where user_id in (SELECT id from uum_user where {0}));
cas.authn.attributeRepository.jdbc[2].username=username
cas.authn.attributeRepository.jdbc[2].failFastTimeout=1
cas.authn.attributeRepository.jdbc[2].isolationLevelName=ISOLATION_READ_COMMITTED
cas.authn.attributeRepository.jdbc[2].propagationBehaviorName=PROPAGATION_REQUIRED
cas.authn.attributeRepository.jdbc[2].batchSize=1



##
# CAS Delegated Authentication
#
cas.authn.pac4j.bitbucket.clientName=Bitbucket
cas.authn.pac4j.dropbox.clientName=Dropbox
cas.authn.pac4j.facebook.clientName=Facebook
cas.authn.pac4j.foursquare.clientName=Foursquare
cas.authn.pac4j.github.clientName=Github
cas.authn.pac4j.google.clientName=Google
cas.authn.pac4j.linkedIn.clientName=LinkedIn
cas.authn.pac4j.paypal.clientName=PayPal
cas.authn.pac4j.twitter.clientName=Twitter
cas.authn.pac4j.yahoo.clientName=Yahoo
cas.authn.pac4j.windowsLive.clientName=Windows Live
cas.authn.pac4j.wordpress.clientName=WordPress



#\u5BC6\u7801\u7BA1\u7406 \u5F00\u59CB
#\u5141\u8BB8\u5185\u7F6E\u5BC6\u7801\u7BA1\u7406
cas.authn.pm.enabled=true

############################## email
spring.mail.host=${pay.cas.tec.email.host}
spring.mail.port=${pay.cas.tec.email.port}
spring.mail.username=${pay.cas.tec.email.username}
spring.mail.password=${pay.cas.tec.email.password}
spring.mail.testConnection=false
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=false

#\u6839\u636E\u7528\u6237\u540D\u67E5\u627E\u90AE\u7BB1
cas.authn.pm.jdbc.sqlFindEmail=select email from uum_user where username=?
cas.authn.pm.jdbc.sqlChangePassword=update uum_user set password=? where username=?
#\u5BC6\u7801\u4FEE\u6539\u52A0\u5BC6\u89C4\u5219\uFF0C\u8FD9\u4E2A\u5FC5\u987B\u8981\u548C\u539F\u59CB\u5BC6\u7801\u52A0\u5BC6\u89C4\u5219\u4E00\u81F4
cas.authn.pm.jdbc.passwordEncoder.type=${passwordEncoder.type}
cas.authn.pm.jdbc.passwordEncoder.secret=${passwordEncoder.secret}
cas.authn.pm.jdbc.passwordEncoder.encodingAlgorithm=${passwordEncoder.encodingAlgorithm}
cas.authn.pm.jdbc.passwordEncoder.characterEncoding=${passwordEncoder.characterEncoding}



#\u91CD\u7F6E\u4FE1\u606F https://apereo.github.io/cas/5.1.x/installation/Configuration-Properties.html#password-management
cas.authn.pm.reset.from=${spring.mail.username}
#\u53D1\u9001\u90AE\u4EF6\u6807\u9898
cas.authn.pm.reset.subject=SSO DEMO \u91CD\u7F6E\u5BC6\u7801
#\u90AE\u4EF6\u5185\u5BB9\uFF0C\u5FC5\u987B\u8981\u6709%s\uFF0C\u56E0\u4E3A\u4F1A\u751F\u6210\u4E00\u4E2A\u8FDE\u63A5\u5E76\u4E14\u5E26\u4E86token\uFF0C\u5426\u5219\u65E0\u6CD5\u6253\u5F00\u94FE\u63A5\uFF0C\u5F53\u7136\u8FD9\u4E2A\u94FE\u63A5\u4E5F\u548Ccas.server.prefix\u6709\u5173\u7CFB
cas.authn.pm.reset.text=\u6253\u5F00\u4EE5\u4E0B\u94FE\u63A5\u91CD\u7F6E\u60A8\u7684\u5BC6\u7801\uFF08SSO-DEMO\uFF09: %s
#token\u5931\u6548\u5206\u949F\u6570
cas.authn.pm.reset.expirationMinutes=10
cas.authn.pm.reset.emailAttribute=mail
#\u662F\u5426\u5F00\u542F\u95EE\u9898\u56DE\u7B54
cas.authn.pm.reset.securityQuestionsEnabled=false
#\u65B0\u5BC6\u7801\u5FC5\u987B\u5339\u914D\u8868\u8FBE\u5F0F
cas.authn.pm.policyPattern=\\d{3,10}




com.pay.cas.tec.ds.name=ds_mdb_dsp_rw
